// backend/controllers/moodController.js

import JournalEntry from '../models/journalEntryModel.js';
import { removeStopwords, eng } from 'stopword'; // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å—Ç–æ–ø-—Å–ª–æ–≤

/* ========================================================================= */
/*  ‚öôÔ∏è  –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ                                               */
/* ========================================================================= */

/** –†—É—Å—Å–∫–∏–µ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞ (–¥–æ–ø–æ–ª–Ω—è—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å–ø–∏—Å–æ–∫) */
const ruStopWords = [
  '–∏', '–≤', '–Ω–∞', '–∫', '–æ', '–∞', '–Ω–æ', '—á—Ç–æ', '–µ–≥–æ', '–æ–Ω–∞',
  '–º—ã', '–≤—ã', '–∏—Ö', '–Ω–∏—Ö', '—Å', '–∑–∞', '–ø–æ', '–æ—Ç', '—É',
  '–±—ã', '–∂–µ', '–Ω–∏', '–ª–∏', '–∏–ª–∏', '–ª–∏–±–æ', '—Ç–æ', '—Ç–æ—Ç', '—Ç–∞', '—Ç–µ',
  '—Ç–∞–º', '—Ç–æ–≥–æ', '—Ç–æ–π', '—ç—Ç–æ—Ç', '—ç—Ç–∏', '—Ç–∞–∫', '—Ç–∞–∫–æ–π',
  '—Ç–∞–∫–∞—è', '—Ç–∞–∫–∏–µ', '–≤–æ—Ç', '—Å–µ–π—á–∞—Å', '—Ç–æ–≥–¥–∞', '—Ç–æ–ª—å–∫–æ',
  '—É–∂–µ', '–µ—â—ë', '–Ω–∏–∫–æ–≥–¥–∞', '–≤—Å–µ–≥–¥–∞', '–∏–Ω–æ–≥–¥–∞', '—á–∞—Å—Ç–æ',
  '—Ä–µ–¥–∫–æ', '–Ω–µ–º–Ω–æ–≥–æ', '–æ—á–µ–Ω—å', '—Å–ª–∏—à–∫–æ–º', '–ø–æ—á—Ç–∏', '–≤–æ–æ–±—â–µ',
  '–∫–æ–Ω–µ—á–Ω–æ', '–º–æ–∂–µ—Ç', '–Ω—É–∂–Ω–æ', '–º–æ–∂–Ω–æ', '—Å–ª–µ–¥—É–µ—Ç', '–¥–æ–ª–∂–µ–Ω',
  '—Ö–æ—Ç–µ—Ç—å', '–Ω–∞–¥–æ', '–±—ã—Ç—å', '–µ—Å—Ç—å', '–∏–¥—Ç–∏', '–µ—Ö–∞—Ç—å', '—Å–º–æ—Ç—Ä–µ—Ç—å', '–≥–æ–≤–æ—Ä–∏—Ç—å'
];

/** –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ–∫—Ä–∞—à–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ ‚Äî –±—É–¥—É—Ç –≤—ã–¥–µ–ª–µ–Ω—ã –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ */
const emotionWords = [
  // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ
  '—Ä–∞–¥–æ—Å—Ç—å', '—Å—á–∞—Å—Ç—å–µ', '—ç–Ω–µ—Ä–≥–∏—è', '—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ', '—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ', '–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å',
  '–æ–ø—Ç–∏–º–∏–∑–º', '–¥–æ–≤–µ—Ä–∏–µ', '–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ', '–≥–æ—Ä–¥–æ—Å—Ç—å', '–Ω–∞–¥–µ–∂–¥–∞', '—É—Å–ø–µ—Ö', '—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å',
  '–ø–æ–±–µ–¥–∞', '—É–¥–∏–≤–ª–µ–Ω–∏–µ',

  // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ
  '–ø–µ—á–∞–ª—å', '–≥–Ω–µ–≤', '—Å—Ç—Ä–∞—Ö', '—Ç—Ä–µ–≤–æ–≥–∞', '—Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ', '–±–æ–ª—å', '—Å—Ç—Ä–µ—Å—Å',
  '–ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞', '–∑–ª–æ—Å—Ç—å', '–≤–∏–Ω–∞', '–Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å', '–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ', '—É—Ç–æ–º–ª–µ–Ω–∏–µ',
  '–∏–∑–Ω–æ—Å', '–Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–µ', '–ø–æ—Ç–µ—Ä—è', '—Ç—Ä–∞—É—Ä',

  // –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ / —Å–º–µ—à–∞–Ω–Ω—ã–µ
  '—Å–æ–º–Ω–µ–Ω–∏–µ', '—Å—Ç—Ä–∞–Ω–Ω–æ—Å—Ç—å', '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ', '–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ', '–∑–∞–¥—É–º—á–∏–≤–æ',
  '–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è', '—Å–º–µ—à–∞–Ω–Ω—ã–µ —á—É–≤—Å—Ç–≤–∞'
];

/* ========================================================================= */
/*  üìä  Word-cloud –ø–æ –∑–∞–ø–∏—Å—è–º –∂—É—Ä–Ω–∞–ª–∞                                         */
/* ========================================================================= */

export const getWordCloudData = async (req, res) => {
  const rawTimeframe = req.query.timeframe ?? 'all';   // &larr; –µ–¥–∏–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const timeframe = rawTimeframe.toLowerCase();        // —É–Ω–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä

  console.log(`[WordCloud] user=${req.user.id} timeframe=${timeframe}`);

  try {
    /* ---------- 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥—Ä–∞–Ω–∏—Ü—É –¥–∞—Ç ---------- */
    let startDate = new Date(0); // 'all' ‚Üí —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞
    const now = new Date();

    switch (timeframe) {
      case 'week':
        startDate = new Date(now);
        startDate.setDate(now.getDate() - 7);
        break;
      case 'twoweeks':
      case 'twoWeeks':
        startDate = new Date(now);
        startDate.setDate(now.getDate() - 14);
        break;
      case 'month':
        startDate = new Date(now);
        startDate.setMonth(now.getMonth() - 1);
        break;
      case 'year':
        startDate = new Date(now);
        startDate.setFullYear(now.getFullYear() - 1);
        break;
      case 'all':
        // –æ—Å—Ç–∞–≤–ª—è–µ–º startDate = 1970-01-01
        break;
      default:
        console.warn(`[WordCloud] –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π timeframe "${rawTimeframe}", –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ 'all'`);
        break;
    }

    /* ---------- 2. –î–æ—Å—Ç–∞—ë–º –∑–∞–ø–∏—Å–∏ –∏–∑ Mongo ---------- */
    const entries = await JournalEntry.find({
      userId: req.user.id,
      date: { $gte: startDate }
    }).select('content mood analysis.identifiedPatterns');

    if (entries.length === 0) return res.status(200).json([]);

    /* ---------- 3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç ‚Äî —Ç–µ–ø–µ—Ä—å –≤—Å–µ —Å–ª–æ–≤–∞ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –æ–±–ª–∞–∫–æ ---------- */
    const allContent = entries.map(e => e.content).join(' ');

    const tokens = allContent
      .toLowerCase()
      .replace(/[^a-z–∞-—è—ë0-9]+/gi, ' ')
      .replace(/\s+/g, ' ')
      .split(' ')
      .filter(w => w.length > 2);

    /* Remove stop-words, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ–∫—Ä–∞—à–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ */
    const filtered = removeStopwords(tokens, [...eng, ...ruStopWords]).filter(w => w && w.length > 2);

    /* –î–æ–±–∞–≤–ª—è–µ–º —è—Ä–ª—ã–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ —à–∞–±–ª–æ–Ω—ã –∞–Ω–∞–ª–∏–∑–∞ –≤ –º–∞—Å—Å–∏–≤ —Å–ª–æ–≤ */
    entries.forEach(({ mood, analysis }) => {
      if (mood?.label) {
        filtered.push(...Array(3).fill(mood.label.toLowerCase())); // —É—Å–∏–ª–∏–≤–∞–µ–º –≤–µ—Å —è—Ä–ª—ã–∫–∞
      }
      if (Array.isArray(analysis?.identifiedPatterns)) {
        analysis.identifiedPatterns.forEach(p => {
          filtered.push(
            ...p.toLowerCase()
               .replace(/[^a-z–∞-—è—ë0-9]+/gi, ' ')
               .split(' ')
               .filter(w => w.length > 2)
          );
        });
      }
    });

    /* ---------- 4. –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —á–∞—Å—Ç–æ—Ç—ã ---------- */
    const freq = filtered.reduce((acc, w) => {
      acc[w] = (acc[w] || 0) + 1;
      return acc;
    }, {});

    const wordCloudData = Object.entries(freq)
      .map(([text, value]) => ({ text, value }))
      .sort((a, b) => b.value - a.value)
      .slice(0, 100); // top-100

    return res.status(200).json(wordCloudData);
  } catch (err) {
    console.error('[WordCloud] error:', err);
    res.status(500).json({ message: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–±–ª–∞–∫–∞ —Å–ª–æ–≤' });
  }
};
